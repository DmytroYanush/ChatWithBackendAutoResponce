{"ast":null,"code":"var _jsxFileName = \"G:\\\\repositories\\\\chat-app-starter\\\\frontend\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getMessages, sendMessage } from '../api/messages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow({\n  chatId\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  useEffect(() => {\n    if (chatId) {\n      getMessages(chatId).then(setMessages);\n    }\n  }, [chatId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!text.trim()) return;\n    const newMsg = await sendMessage(chatId, text);\n    setMessages(prev => [...prev, newMsg]);\n    setText('');\n\n    // Optionally refresh again after bot reply\n    setTimeout(() => getMessages(chatId).then(setMessages), 3100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Type your message...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"LNrueI2DZYRpJNDsr67q34puWKw=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["useEffect","useState","getMessages","sendMessage","jsxDEV","_jsxDEV","ChatWindow","chatId","_s","messages","setMessages","text","setText","then","handleSubmit","e","preventDefault","trim","newMsg","prev","setTimeout","children","map","msg","i","sender","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","type","_c","$RefreshReg$"],"sources":["G:/repositories/chat-app-starter/frontend/src/components/ChatWindow.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getMessages, sendMessage } from '../api/messages';\n\nfunction ChatWindow({ chatId }) {\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n\n  useEffect(() => {\n    if (chatId) {\n      getMessages(chatId).then(setMessages);\n    }\n  }, [chatId]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!text.trim()) return;\n\n    const newMsg = await sendMessage(chatId, text);\n    setMessages(prev => [...prev, newMsg]);\n    setText('');\n\n    // Optionally refresh again after bot reply\n    setTimeout(() => getMessages(chatId).then(setMessages), 3100);\n  };\n\n  return (\n    <div>\n      <ul>\n        {messages.map((msg, i) => (\n          <li key={i}>\n            <strong>{msg.sender}:</strong> {msg.text}\n          </li>\n        ))}\n      </ul>\n      <form onSubmit={handleSubmit}>\n        <input\n          value={text}\n          onChange={e => setText(e.target.value)}\n          placeholder=\"Type your message...\"\n          required\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default ChatWindow;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,UAAUA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,IAAIO,MAAM,EAAE;MACVL,WAAW,CAACK,MAAM,CAAC,CAACM,IAAI,CAACH,WAAW,CAAC;IACvC;EACF,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,MAAMO,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,CAAC,EAAE;IAElB,MAAMC,MAAM,GAAG,MAAMf,WAAW,CAACI,MAAM,EAAEI,IAAI,CAAC;IAC9CD,WAAW,CAACS,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,MAAM,CAAC,CAAC;IACtCN,OAAO,CAAC,EAAE,CAAC;;IAEX;IACAQ,UAAU,CAAC,MAAMlB,WAAW,CAACK,MAAM,CAAC,CAACM,IAAI,CAACH,WAAW,CAAC,EAAE,IAAI,CAAC;EAC/D,CAAC;EAED,oBACEL,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EACGZ,QAAQ,CAACa,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBACnBnB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAAgB,QAAA,GAASE,GAAG,CAACE,MAAM,EAAC,GAAC;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACN,GAAG,CAACZ,IAAI;MAAA,GADjCa,CAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLxB,OAAA;MAAMyB,QAAQ,EAAEhB,YAAa;MAAAO,QAAA,gBAC3BhB,OAAA;QACE0B,KAAK,EAAEpB,IAAK;QACZqB,QAAQ,EAAEjB,CAAC,IAAIH,OAAO,CAACG,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QACvCG,WAAW,EAAC,sBAAsB;QAClCC,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACFxB,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAAAf,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACrB,EAAA,CA1CQF,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AA4CnB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}