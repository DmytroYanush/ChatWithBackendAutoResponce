{"ast":null,"code":"const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nexport const register = async userData => {\n  const response = await fetch(`${API_URL}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userData)\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Registration failed');\n  }\n  return response.json();\n};\nexport const login = async credentials => {\n  const response = await fetch(`${API_URL}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Login failed');\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","register","userData","response","fetch","method","headers","body","JSON","stringify","ok","error","json","Error","login","credentials"],"sources":["G:/repositories/chat-app-starter/frontend/src/api/auth.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nexport const register = async (userData) => {\n  const response = await fetch(`${API_URL}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Registration failed');\n  }\n\n  return response.json();\n};\n\nexport const login = async (credentials) => {\n  const response = await fetch(`${API_URL}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(credentials),\n  });\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.error || 'Login failed');\n  }\n\n  return response.json();\n}; "],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAC1C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,gBAAgB,EAAE;IACvDQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMC,KAAK,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACA,KAAK,IAAI,qBAAqB,CAAC;EACvD;EAEA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAME,KAAK,GAAG,MAAOC,WAAW,IAAK;EAC1C,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,OAAO,aAAa,EAAE;IACpDQ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACM,WAAW;EAClC,CAAC,CAAC;EAEF,IAAI,CAACZ,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAMC,KAAK,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACA,KAAK,IAAI,cAAc,CAAC;EAChD;EAEA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}