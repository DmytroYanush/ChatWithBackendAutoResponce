{"ast":null,"code":"var _jsxFileName = \"G:\\\\repositories\\\\chat-app-starter\\\\frontend\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getMessages, sendMessage, updateMessage } from '../api/messages';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/chatwindow.css';\nimport AutoMessageButton from './AutoMessageButton';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatWindow({\n  chatId,\n  chatName,\n  user\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const [editingId, setEditingId] = useState(null);\n  const [editText, setEditText] = useState('');\n  const senderId = (user === null || user === void 0 ? void 0 : user.uid) || (user === null || user === void 0 ? void 0 : user.email);\n  useEffect(() => {\n    if (chatId) {\n      getMessages(chatId).then(setMessages).catch(err => {\n        toast.error('Failed to fetch messages');\n        console.error(err);\n      });\n    }\n  }, [chatId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const trimmed = text.trim();\n    if (!trimmed) return;\n    try {\n      await sendMessage(chatId, trimmed, senderId);\n      toast.success('Message sent!');\n      setText('');\n      getMessages(chatId).then(setMessages);\n      setTimeout(() => {\n        getMessages(chatId).then(setMessages);\n      }, 3500);\n    } catch (err) {\n      toast.error('Failed to send message');\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    if (chatId) {\n      getMessages(chatId).then(msgs => {\n        console.log('messages:', msgs);\n        setMessages(msgs);\n      }).catch(err => {\n        toast.error('Failed to fetch messages');\n        console.error(err);\n      });\n    }\n  }, [chatId]);\n  const handleEdit = msg => {\n    setEditingId(msg._id);\n    setEditText(msg.text);\n  };\n  const handleEditSave = async msg => {\n    try {\n      await updateMessage(msg._id, editText, senderId);\n      setEditingId(null);\n      setEditText('');\n      getMessages(chatId).then(setMessages);\n    } catch (err) {\n      toast.error('Failed to update message');\n      console.error(err);\n    }\n  };\n  const handleEditCancel = () => {\n    setEditingId(null);\n    setEditText('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      style: {\n        flex: 1,\n        overflowY: 'auto',\n        minHeight: 0\n      },\n      children: messages.map((message, i) => {\n        const isOwn = message.sender === senderId;\n        console.log('senderId:', senderId, 'message.sender:', message.sender, 'isOwn:', isOwn);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message-wrapper ${message.sender === 'bot' ? 'bot' : isOwn ? 'user' : 'other'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-message ${message.sender === 'bot' ? 'bot' : isOwn ? 'user' : 'other'}`,\n            children: editingId === message._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: editText,\n                onChange: e => setEditText(e.target.value),\n                style: {\n                  width: '80%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEditSave(message),\n                style: {\n                  marginLeft: 4\n                },\n                children: \"\\uD83D\\uDCBE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleEditCancel,\n                style: {\n                  marginLeft: 2\n                },\n                children: \"\\u2715\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-text\",\n                style: {\n                  display: 'flex',\n                  alignItems: 'center'\n                },\n                children: [message.text, isOwn && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEdit(message),\n                  style: {\n                    marginLeft: 8,\n                    fontSize: 14,\n                    background: 'none',\n                    border: 'none',\n                    cursor: 'pointer',\n                    padding: 0,\n                    color: '#888',\n                    display: 'inline-flex',\n                    alignItems: 'center',\n                    height: 20,\n                    width: 20\n                  },\n                  title: \"Edit\",\n                  children: \"\\u270F\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 41\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-time ${message.sender === 'bot' ? 'bot' : isOwn ? 'user' : 'other'}`,\n            children: new Date(message.createdAt).toLocaleString('en-US', {\n              year: 'numeric',\n              month: 'short',\n              day: 'numeric',\n              hour: '2-digit',\n              minute: '2-digit'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chat-input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AutoMessageButton, {\n        compact: true,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatWindow, \"5IN8Z2Fkz7gl2iVxakVJMZ8Payc=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["useEffect","useState","getMessages","sendMessage","updateMessage","toast","ToastContainer","AutoMessageButton","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","chatId","chatName","user","_s","messages","setMessages","text","setText","editingId","setEditingId","editText","setEditText","senderId","uid","email","then","catch","err","error","console","handleSubmit","e","preventDefault","trimmed","trim","success","setTimeout","msgs","log","handleEdit","msg","_id","handleEditSave","handleEditCancel","className","children","style","flex","overflowY","minHeight","map","message","i","isOwn","sender","value","onChange","target","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginLeft","display","alignItems","fontSize","background","border","cursor","padding","color","height","title","Date","createdAt","toLocaleString","year","month","day","hour","minute","onSubmit","placeholder","type","compact","_c","$RefreshReg$"],"sources":["G:/repositories/chat-app-starter/frontend/src/components/ChatWindow.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { getMessages, sendMessage, updateMessage } from '../api/messages';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../styles/chatwindow.css';\r\nimport AutoMessageButton from './AutoMessageButton';\r\n\r\nfunction ChatWindow({ chatId, chatName, user }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [text, setText] = useState('');\r\n    const [editingId, setEditingId] = useState(null);\r\n    const [editText, setEditText] = useState('');\r\n\r\n    const senderId = user?.uid || user?.email;\r\n\r\n    useEffect(() => {\r\n        if (chatId) {\r\n            getMessages(chatId)\r\n                .then(setMessages)\r\n                .catch((err) => {\r\n                    toast.error('Failed to fetch messages');\r\n                    console.error(err);\r\n                });\r\n        }\r\n    }, [chatId]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const trimmed = text.trim();\r\n        if (!trimmed) return;\r\n\r\n        try {\r\n            await sendMessage(chatId, trimmed, senderId);\r\n            toast.success('Message sent!');\r\n            setText('');\r\n            getMessages(chatId).then(setMessages);\r\n            setTimeout(() => {\r\n                getMessages(chatId).then(setMessages);\r\n            }, 3500);\r\n        } catch (err) {\r\n            toast.error('Failed to send message');\r\n            console.error(err);\r\n        }\r\n    };\r\n    \r\n    useEffect(() => {\r\n        if (chatId) {\r\n            getMessages(chatId)\r\n                .then(msgs => {\r\n                    console.log('messages:', msgs);\r\n                    setMessages(msgs);\r\n                })\r\n                .catch((err) => {\r\n                    toast.error('Failed to fetch messages');\r\n                    console.error(err);\r\n                });\r\n        }\r\n    }, [chatId]);\r\n\r\n    const handleEdit = (msg) => {\r\n        setEditingId(msg._id);\r\n        setEditText(msg.text);\r\n    };\r\n\r\n    const handleEditSave = async (msg) => {\r\n        try {\r\n            await updateMessage(msg._id, editText, senderId);\r\n            setEditingId(null);\r\n            setEditText('');\r\n            getMessages(chatId).then(setMessages);\r\n        } catch (err) {\r\n            toast.error('Failed to update message');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleEditCancel = () => {\r\n        setEditingId(null);\r\n        setEditText('');\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-messages\" style={{ flex: 1, overflowY: 'auto', minHeight: 0 }}>\r\n                {messages.map((message, i) => {\r\n                    const isOwn = message.sender === senderId;\r\n                    console.log('senderId:', senderId, 'message.sender:', message.sender, 'isOwn:', isOwn);\r\n                    return (\r\n                        <div\r\n                            key={i}\r\n                            className={`chat-message-wrapper ${message.sender === 'bot' ? 'bot' : isOwn ? 'user' : 'other'}`}\r\n                        >\r\n                            <div className={`chat-message ${message.sender === 'bot' ? 'bot' : isOwn ? 'user' : 'other'}`}>\r\n                                {editingId === message._id ? (\r\n                                    <>\r\n                                        <input\r\n                                            value={editText}\r\n                                            onChange={e => setEditText(e.target.value)}\r\n                                            style={{ width: '80%' }}\r\n                                        />\r\n                                        <button onClick={() => handleEditSave(message)} style={{ marginLeft: 4 }}>💾</button>\r\n                                        <button onClick={handleEditCancel} style={{ marginLeft: 2 }}>✕</button>\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <div className=\"message-text\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                                            {message.text}\r\n                                            {isOwn && (\r\n                                                <button\r\n                                                    onClick={() => handleEdit(message)}\r\n                                                    style={{\r\n                                                        marginLeft: 8,\r\n                                                        fontSize: 14,\r\n                                                        background: 'none',\r\n                                                        border: 'none',\r\n                                                        cursor: 'pointer',\r\n                                                        padding: 0,\r\n                                                        color: '#888',\r\n                                                        display: 'inline-flex',\r\n                                                        alignItems: 'center',\r\n                                                        height: 20,\r\n                                                        width: 20\r\n                                                    }}\r\n                                                    title=\"Edit\"\r\n                                                >\r\n                                                    ✏️\r\n                                                </button>\r\n                                            )}\r\n                                        </div>\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                            <div className={`message-time ${message.sender === 'bot' ? 'bot' : isOwn ? 'user' : 'other'}`}>\r\n                                {new Date(message.createdAt).toLocaleString('en-US', {\r\n                                    year: 'numeric',\r\n                                    month: 'short',\r\n                                    day: 'numeric',\r\n                                    hour: '2-digit',\r\n                                    minute: '2-digit',\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <form onSubmit={handleSubmit} className=\"chat-input-area\">\r\n                <input\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                    placeholder=\"Type your message...\"\r\n                />\r\n                <button type=\"submit\">Send</button>\r\n                <AutoMessageButton compact user={user} />\r\n            </form>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}