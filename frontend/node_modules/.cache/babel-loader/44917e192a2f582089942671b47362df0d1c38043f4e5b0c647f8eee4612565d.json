{"ast":null,"code":"var _jsxFileName = \"G:\\\\repositories\\\\chat-app-starter\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Sidebar from './components/Sidebar';\nimport ChatWindow from './components/ChatWindow';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from './firebase';\nimport './styles/chat.css';\nimport socket from './socket';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [user, setUser] = useState(null);\n  const [guestId, setGuestId] = useState(null);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      setUser(currentUser);\n      if (!currentUser) {\n        setSelectedChat(null); // Clear chat on logout\n        // Генеруємо guestId, якщо його ще немає\n        let gid = localStorage.getItem('guestId');\n        if (!gid) {\n          gid = 'guest-' + Math.random().toString(36).slice(2, 10);\n          localStorage.setItem('guestId', gid);\n        }\n        setGuestId(gid);\n      } else {\n        setGuestId(null);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  useEffect(() => {\n    // Listen for new-message events\n    const handler = message => {\n      // If the message is for a chat other than the currently open one, show a toast\n      if (!selectedChat || message.chatId !== selectedChat._id) {\n        toast.info('New message in another chat!');\n      }\n    };\n    socket.on('new-message', handler);\n    return () => socket.off('new-message', handler);\n  }, [selectedChat]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    style: {\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onSelect: setSelectedChat,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"chat-window\",\n      children: (user || guestId) && selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [selectedChat.firstName, \" \", selectedChat.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n          chatId: selectedChat._id,\n          user: user || {\n            uid: guestId\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: user || guestId ? 'Select a chat to start messaging' : 'Please log in to use the chat'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"bottom-right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"qPFNeGH5XFKEBgFPfm6FmzXnAEk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Sidebar","ChatWindow","onAuthStateChanged","auth","socket","toast","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedChat","setSelectedChat","user","setUser","guestId","setGuestId","unsubscribe","currentUser","gid","localStorage","getItem","Math","random","toString","slice","setItem","handler","message","chatId","_id","info","on","off","className","style","height","overflow","children","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","firstName","lastName","uid","position","_c","$RefreshReg$"],"sources":["G:/repositories/chat-app-starter/frontend/src/App.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Sidebar from './components/Sidebar';\r\nimport ChatWindow from './components/ChatWindow';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { auth } from './firebase';\r\nimport './styles/chat.css';\r\nimport socket from './socket';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App() {\r\n    const [selectedChat, setSelectedChat] = useState(null);\r\n    const [user, setUser] = useState(null);\r\n    const [guestId, setGuestId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\r\n            setUser(currentUser);\r\n            if (!currentUser) {\r\n                setSelectedChat(null); // Clear chat on logout\r\n                // Генеруємо guestId, якщо його ще немає\r\n                let gid = localStorage.getItem('guestId');\r\n                if (!gid) {\r\n                    gid = 'guest-' + Math.random().toString(36).slice(2, 10);\r\n                    localStorage.setItem('guestId', gid);\r\n                }\r\n                setGuestId(gid);\r\n            } else {\r\n                setGuestId(null);\r\n            }\r\n        });\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Listen for new-message events\r\n        const handler = (message) => {\r\n            // If the message is for a chat other than the currently open one, show a toast\r\n            if (!selectedChat || message.chatId !== selectedChat._id) {\r\n                toast.info('New message in another chat!');\r\n            }\r\n        };\r\n        socket.on('new-message', handler);\r\n        return () => socket.off('new-message', handler);\r\n    }, [selectedChat]);\r\n\r\n    return (\r\n        <div className=\"app\" style={{ height: '100vh', overflow: 'hidden' }}>\r\n            <Sidebar onSelect={setSelectedChat} user={user} />\r\n            <main className=\"chat-window\">\r\n                {(user || guestId) && selectedChat ? (\r\n                    <>\r\n                        <div className=\"chat-header\">\r\n                            {selectedChat.firstName} {selectedChat.lastName}\r\n                        </div>\r\n                        <ChatWindow chatId={selectedChat._id} user={user || { uid: guestId }} />\r\n                    </>\r\n                ) : (\r\n                    <div className=\"chat-header\">\r\n                        {user || guestId ? 'Select a chat to start messaging' : 'Please log in to use the chat'}\r\n                    </div>\r\n                )}\r\n            </main>\r\n            <ToastContainer position=\"bottom-right\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}