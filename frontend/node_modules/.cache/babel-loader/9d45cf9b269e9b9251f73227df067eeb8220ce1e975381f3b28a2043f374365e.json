{"ast":null,"code":"var _jsxFileName = \"G:\\\\repositories\\\\chat-app-starter\\\\frontend\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getMessages, sendMessage } from '../api/messages';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth } from '../firebase';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/chatwindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow({\n  chat\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      setUser(currentUser);\n    });\n    return () => unsubscribe();\n  }, []);\n  useEffect(() => {\n    if (chat && (user || chat.isSystem)) {\n      getMessages(chat._id).then(setMessages).catch(err => {\n        toast.error('Failed to fetch messages');\n        console.error(err);\n      });\n    } else {\n      setMessages([]);\n    }\n  }, [chat, user]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const trimmed = text.trim();\n    if (!trimmed) return;\n    try {\n      await sendMessage(chat._id, trimmed, !!user);\n      toast.success('Message sent!');\n      setText('');\n      getMessages(chat._id).then(setMessages);\n      setTimeout(() => {\n        getMessages(chat._id).then(setMessages);\n      }, 3500);\n    } catch (err) {\n      toast.error('Failed to send message');\n      console.error(err);\n    }\n  };\n  if (!chat) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message-wrapper ${message.sender === 'bot' ? 'bot' : 'user'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${message.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-text\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-time ${message.sender}`,\n          children: new Date(message.createdAt).toLocaleString('en-US', {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), (user || chat.isSystem) && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chat-input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatWindow, \"uXpXHuNmXqWHBh7yr1tbGtBRXJI=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["useEffect","useState","getMessages","sendMessage","toast","ToastContainer","onAuthStateChanged","auth","jsxDEV","_jsxDEV","ChatWindow","chat","_s","messages","setMessages","text","setText","user","setUser","unsubscribe","currentUser","isSystem","_id","then","catch","err","error","console","handleSubmit","e","preventDefault","trimmed","trim","success","setTimeout","className","fileName","_jsxFileName","lineNumber","columnNumber","children","map","message","i","sender","Date","createdAt","toLocaleString","year","month","day","hour","minute","onSubmit","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["G:/repositories/chat-app-starter/frontend/src/components/ChatWindow.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { getMessages, sendMessage } from '../api/messages';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { auth } from '../firebase';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../styles/chatwindow.css';\r\n\r\nfunction ChatWindow({ chat }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [text, setText] = useState('');\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\r\n            setUser(currentUser);\r\n        });\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (chat && (user || chat.isSystem)) {\r\n            getMessages(chat._id)\r\n                .then(setMessages)\r\n                .catch((err) => {\r\n                    toast.error('Failed to fetch messages');\r\n                    console.error(err);\r\n                });\r\n        } else {\r\n            setMessages([]);\r\n        }\r\n    }, [chat, user]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const trimmed = text.trim();\r\n        if (!trimmed) return;\r\n\r\n        try {\r\n            await sendMessage(chat._id, trimmed, !!user);\r\n            toast.success('Message sent!');\r\n            setText('');\r\n            getMessages(chat._id).then(setMessages);\r\n            setTimeout(() => {\r\n                getMessages(chat._id).then(setMessages);\r\n            }, 3500);\r\n        } catch (err) {\r\n            toast.error('Failed to send message');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    if (!chat) return <div className=\"chat-container\" />;\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-messages\">\r\n                {messages.map((message, i) => (\r\n                    <div\r\n                        key={i}\r\n                        className={`chat-message-wrapper ${message.sender === 'bot' ? 'bot' : 'user'}`}\r\n                    >\r\n                        <div className={`chat-message ${message.sender}`}>\r\n                            <div className=\"message-text\">{message.text}</div>\r\n                        </div>\r\n                        <div className={`message-time ${message.sender}`}>\r\n                            {new Date(message.createdAt).toLocaleString('en-US', {\r\n                                year: 'numeric',\r\n                                month: 'short',\r\n                                day: 'numeric',\r\n                                hour: '2-digit',\r\n                                minute: '2-digit',\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {(user || chat.isSystem) && (\r\n                <form onSubmit={handleSubmit} className=\"chat-input-area\">\r\n                    <input\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                        placeholder=\"Type your message...\"\r\n                    />\r\n                    <button type=\"submit\">Send</button>\r\n                </form>\r\n            )}\r\n\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatWindow;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,iBAAiB;AAC1D,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AACtD,SAASC,kBAAkB,QAAQ,eAAe;AAClD,SAASC,IAAI,QAAQ,aAAa;AAClC,OAAO,uCAAuC;AAC9C,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,UAAUA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMmB,WAAW,GAAGb,kBAAkB,CAACC,IAAI,EAAGa,WAAW,IAAK;MAC1DF,OAAO,CAACE,WAAW,CAAC;IACxB,CAAC,CAAC;IACF,OAAO,MAAMD,WAAW,CAAC,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACZ,IAAIW,IAAI,KAAKM,IAAI,IAAIN,IAAI,CAACU,QAAQ,CAAC,EAAE;MACjCnB,WAAW,CAACS,IAAI,CAACW,GAAG,CAAC,CAChBC,IAAI,CAACT,WAAW,CAAC,CACjBU,KAAK,CAAEC,GAAG,IAAK;QACZrB,KAAK,CAACsB,KAAK,CAAC,0BAA0B,CAAC;QACvCC,OAAO,CAACD,KAAK,CAACD,GAAG,CAAC;MACtB,CAAC,CAAC;IACV,CAAC,MAAM;MACHX,WAAW,CAAC,EAAE,CAAC;IACnB;EACJ,CAAC,EAAE,CAACH,IAAI,EAAEM,IAAI,CAAC,CAAC;EAEhB,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,OAAO,GAAGhB,IAAI,CAACiB,IAAI,CAAC,CAAC;IAC3B,IAAI,CAACD,OAAO,EAAE;IAEd,IAAI;MACA,MAAM5B,WAAW,CAACQ,IAAI,CAACW,GAAG,EAAES,OAAO,EAAE,CAAC,CAACd,IAAI,CAAC;MAC5Cb,KAAK,CAAC6B,OAAO,CAAC,eAAe,CAAC;MAC9BjB,OAAO,CAAC,EAAE,CAAC;MACXd,WAAW,CAACS,IAAI,CAACW,GAAG,CAAC,CAACC,IAAI,CAACT,WAAW,CAAC;MACvCoB,UAAU,CAAC,MAAM;QACbhC,WAAW,CAACS,IAAI,CAACW,GAAG,CAAC,CAACC,IAAI,CAACT,WAAW,CAAC;MAC3C,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC,CAAC,OAAOW,GAAG,EAAE;MACVrB,KAAK,CAACsB,KAAK,CAAC,wBAAwB,CAAC;MACrCC,OAAO,CAACD,KAAK,CAACD,GAAG,CAAC;IACtB;EACJ,CAAC;EAED,IAAI,CAACd,IAAI,EAAE,oBAAOF,OAAA;IAAK0B,SAAS,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEpD,oBACI9B,OAAA;IAAK0B,SAAS,EAAC,gBAAgB;IAAAK,QAAA,gBAC3B/B,OAAA;MAAK0B,SAAS,EAAC,eAAe;MAAAK,QAAA,EACzB3B,QAAQ,CAAC4B,GAAG,CAAC,CAACC,OAAO,EAAEC,CAAC,kBACrBlC,OAAA;QAEI0B,SAAS,EAAE,wBAAwBO,OAAO,CAACE,MAAM,KAAK,KAAK,GAAG,KAAK,GAAG,MAAM,EAAG;QAAAJ,QAAA,gBAE/E/B,OAAA;UAAK0B,SAAS,EAAE,gBAAgBO,OAAO,CAACE,MAAM,EAAG;UAAAJ,QAAA,eAC7C/B,OAAA;YAAK0B,SAAS,EAAC,cAAc;YAAAK,QAAA,EAAEE,OAAO,CAAC3B;UAAI;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACN9B,OAAA;UAAK0B,SAAS,EAAE,gBAAgBO,OAAO,CAACE,MAAM,EAAG;UAAAJ,QAAA,EAC5C,IAAIK,IAAI,CAACH,OAAO,CAACI,SAAS,CAAC,CAACC,cAAc,CAAC,OAAO,EAAE;YACjDC,IAAI,EAAE,SAAS;YACfC,KAAK,EAAE,OAAO;YACdC,GAAG,EAAE,SAAS;YACdC,IAAI,EAAE,SAAS;YACfC,MAAM,EAAE;UACZ,CAAC;QAAC;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA,GAdDI,CAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAeL,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAEL,CAACtB,IAAI,IAAIN,IAAI,CAACU,QAAQ,kBACnBZ,OAAA;MAAM4C,QAAQ,EAAEzB,YAAa;MAACO,SAAS,EAAC,iBAAiB;MAAAK,QAAA,gBACrD/B,OAAA;QACI6C,KAAK,EAAEvC,IAAK;QACZwC,QAAQ,EAAG1B,CAAC,IAAKb,OAAO,CAACa,CAAC,CAAC2B,MAAM,CAACF,KAAK,CAAE;QACzCG,WAAW,EAAC;MAAsB;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACF9B,OAAA;QAAQiD,IAAI,EAAC,QAAQ;QAAAlB,QAAA,EAAC;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CACT,eAED9B,OAAA,CAACJ,cAAc;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEd;AAAC3B,EAAA,CApFQF,UAAU;AAAAiD,EAAA,GAAVjD,UAAU;AAsFnB,eAAeA,UAAU;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}