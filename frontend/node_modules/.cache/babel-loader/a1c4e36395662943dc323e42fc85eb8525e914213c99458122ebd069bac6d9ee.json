{"ast":null,"code":"var _jsxFileName = \"G:\\\\repositories\\\\chat-app-starter\\\\frontend\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getMessages, sendMessage } from '../api/messages';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { useAuth } from '../context/AuthContext';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/chatwindow.css';\nimport '../styles/auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow({\n  chatId\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const {\n    user,\n    token\n  } = useAuth();\n  useEffect(() => {\n    if (token && chatId) {\n      getMessages(chatId).then(setMessages).catch(err => {\n        toast.error(err.message || 'Failed to fetch messages');\n        console.error(err);\n      });\n    } else {\n      setMessages([]); // Clear messages when logged out\n    }\n  }, [chatId, token]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const trimmed = text.trim();\n    if (!trimmed || !token) return;\n    try {\n      await sendMessage(chatId, trimmed);\n      toast.success('Message sent!');\n      setText('');\n      getMessages(chatId).then(setMessages);\n      setTimeout(() => {\n        getMessages(chatId).then(setMessages);\n      }, 3500);\n    } catch (err) {\n      toast.error(err.message || 'Failed to send message');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message-wrapper ${message.sender === 'bot' ? 'bot' : 'user'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${message.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-text\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-time ${message.sender}`,\n          children: new Date(message.createdAt).toLocaleString('en-US', {\n            year: 'numeric',\n            month: 'short',\n            day: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), token && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chat-input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatWindow, \"aVdrSpImhkeUgBQ6gfHGKGwdfn0=\", false, function () {\n  return [useAuth];\n});\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["useEffect","useState","getMessages","sendMessage","toast","ToastContainer","useAuth","jsxDEV","_jsxDEV","ChatWindow","chatId","_s","messages","setMessages","text","setText","user","token","then","catch","err","error","message","console","handleSubmit","e","preventDefault","trimmed","trim","success","setTimeout","className","children","map","i","sender","fileName","_jsxFileName","lineNumber","columnNumber","Date","createdAt","toLocaleString","year","month","day","hour","minute","onSubmit","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["G:/repositories/chat-app-starter/frontend/src/components/ChatWindow.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { getMessages, sendMessage } from '../api/messages';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../styles/chatwindow.css';\r\nimport '../styles/auth.css';\r\n\r\nfunction ChatWindow({ chatId }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [text, setText] = useState('');\r\n    const { user, token } = useAuth();\r\n\r\n    useEffect(() => {\r\n        if (token && chatId) {\r\n            getMessages(chatId)\r\n                .then(setMessages)\r\n                .catch((err) => {\r\n                    toast.error(err.message || 'Failed to fetch messages');\r\n                    console.error(err);\r\n                });\r\n        } else {\r\n            setMessages([]); // Clear messages when logged out\r\n        }\r\n    }, [chatId, token]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const trimmed = text.trim();\r\n        if (!trimmed || !token) return;\r\n\r\n        try {\r\n            await sendMessage(chatId, trimmed);\r\n            toast.success('Message sent!');\r\n            setText('');\r\n            getMessages(chatId).then(setMessages);\r\n\r\n            setTimeout(() => {\r\n                getMessages(chatId).then(setMessages);\r\n            }, 3500);\r\n        } catch (err) {\r\n            toast.error(err.message || 'Failed to send message');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-messages\">\r\n                {messages.map((message, i) => (\r\n                    <div\r\n                        key={i}\r\n                        className={`chat-message-wrapper ${message.sender === 'bot' ? 'bot' : 'user'}`}\r\n                    >\r\n                        <div className={`chat-message ${message.sender}`}>\r\n                            <div className=\"message-text\">{message.text}</div>\r\n                        </div>\r\n                        <div className={`message-time ${message.sender}`}>\r\n                            {new Date(message.createdAt).toLocaleString('en-US', {\r\n                                year: 'numeric',\r\n                                month: 'short',\r\n                                day: 'numeric',\r\n                                hour: '2-digit',\r\n                                minute: '2-digit',\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {token && (\r\n                <form onSubmit={handleSubmit} className=\"chat-input-area\">\r\n                    <input\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                        placeholder=\"Type your message...\"\r\n                    />\r\n                    <button type=\"submit\">Send</button>\r\n                </form>\r\n            )}\r\n\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}