{"ast":null,"code":"var _jsxFileName = \"G:\\\\repositories\\\\chat-app-starter\\\\frontend\\\\src\\\\components\\\\AutoMessageButton.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getChats } from '../api/chats';\nimport { sendMessage } from '../api/messages';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst randomMessages = [\"Hello! How are you doing today?\", \"Just checking in to see how things are going!\", \"Hope you're having a great day!\", \"Did you see the latest updates?\", \"What's new in your world?\", \"Just wanted to say hi!\", \"How's your day going so far?\", \"Any exciting plans for today?\", \"Just dropping by to say hello!\", \"Hope everything is going well!\"];\nfunction AutoMessageButton({\n  compact\n}) {\n  _s();\n  const [isActive, setIsActive] = useState(false);\n  const [intervalId, setIntervalId] = useState(null);\n  const sendRandomMessage = async () => {\n    try {\n      const chats = await getChats();\n      if (chats.length === 0) return;\n      const randomChat = chats[Math.floor(Math.random() * chats.length)];\n      const randomMessage = randomMessages[Math.floor(Math.random() * randomMessages.length)];\n      await sendMessage(randomChat._id, randomMessage);\n    } catch (error) {\n      console.error('Error sending random message:', error);\n    }\n  };\n  const toggleAutoMessage = () => {\n    if (isActive) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n      toast.info('Auto-messaging stopped');\n    } else {\n      const id = setInterval(sendRandomMessage, 30000); // every 30 seconds\n      setIntervalId(id);\n      toast.info('Auto-messaging started');\n    }\n    setIsActive(!isActive);\n  };\n  useEffect(() => {\n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [intervalId]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      ...(compact ? {\n        marginLeft: 8,\n        padding: '6px 10px',\n        borderRadius: 16,\n        fontSize: 12,\n        position: 'static'\n        // boxShadow: 'none',\n      } : {\n        // position: 'fixed',\n        // bottom: 24,\n        // right: 24,\n        // zIndex: 1000,\n        padding: '12px 20px',\n        borderRadius: 24,\n        fontSize: 16\n        // boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n      }),\n      background: isActive ? '#f44336' : '#4CAF50',\n      color: 'white',\n      border: 'none',\n      fontWeight: 'bold',\n      cursor: 'pointer'\n    },\n    onClick: toggleAutoMessage,\n    children: isActive ? 'Stop Auto-Messages' : 'Start Auto-Messages'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(AutoMessageButton, \"1x6CMEEiD7bo2K4Hv6Dat2TCAaY=\");\n_c = AutoMessageButton;\nexport default AutoMessageButton;\nvar _c;\n$RefreshReg$(_c, \"AutoMessageButton\");","map":{"version":3,"names":["useState","useEffect","getChats","sendMessage","toast","jsxDEV","_jsxDEV","randomMessages","AutoMessageButton","compact","_s","isActive","setIsActive","intervalId","setIntervalId","sendRandomMessage","chats","length","randomChat","Math","floor","random","randomMessage","_id","error","console","toggleAutoMessage","clearInterval","info","id","setInterval","style","marginLeft","padding","borderRadius","fontSize","position","background","color","border","fontWeight","cursor","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/repositories/chat-app-starter/frontend/src/components/AutoMessageButton.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getChats } from '../api/chats';\r\nimport { sendMessage } from '../api/messages';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst randomMessages = [\r\n  \"Hello! How are you doing today?\",\r\n  \"Just checking in to see how things are going!\",\r\n  \"Hope you're having a great day!\",\r\n  \"Did you see the latest updates?\",\r\n  \"What's new in your world?\",\r\n  \"Just wanted to say hi!\",\r\n  \"How's your day going so far?\",\r\n  \"Any exciting plans for today?\",\r\n  \"Just dropping by to say hello!\",\r\n  \"Hope everything is going well!\"\r\n];\r\n\r\nfunction AutoMessageButton({ compact }) {\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n\r\n  const sendRandomMessage = async () => {\r\n    try {\r\n      const chats = await getChats();\r\n      if (chats.length === 0) return;\r\n      const randomChat = chats[Math.floor(Math.random() * chats.length)];\r\n      const randomMessage = randomMessages[Math.floor(Math.random() * randomMessages.length)];\r\n      await sendMessage(randomChat._id, randomMessage);\r\n    } catch (error) {\r\n      console.error('Error sending random message:', error);\r\n    }\r\n  };\r\n\r\n  const toggleAutoMessage = () => {\r\n    if (isActive) {\r\n      clearInterval(intervalId);\r\n      setIntervalId(null);\r\n      toast.info('Auto-messaging stopped');\r\n    } else {\r\n      const id = setInterval(sendRandomMessage, 30000); // every 30 seconds\r\n      setIntervalId(id);\r\n      toast.info('Auto-messaging started');\r\n    }\r\n    setIsActive(!isActive);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (intervalId) clearInterval(intervalId);\r\n    };\r\n  }, [intervalId]);\r\n\r\n  return (\r\n    <button\r\n      style={{\r\n        ...(compact\r\n          ? {\r\n              marginLeft: 8,\r\n              padding: '6px 10px',\r\n              borderRadius: 16,\r\n              fontSize: 12,\r\n              position: 'static',\r\n              // boxShadow: 'none',\r\n            }\r\n          : {\r\n              // position: 'fixed',\r\n              // bottom: 24,\r\n              // right: 24,\r\n              // zIndex: 1000,\r\n              padding: '12px 20px',\r\n              borderRadius: 24,\r\n              fontSize: 16,\r\n              // boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\r\n            }),\r\n        background: isActive ? '#f44336' : '#4CAF50',\r\n        color: 'white',\r\n        border: 'none',\r\n        fontWeight: 'bold',\r\n        cursor: 'pointer',\r\n      }}\r\n      onClick={toggleAutoMessage}\r\n    >\r\n      {isActive ? 'Stop Auto-Messages' : 'Start Auto-Messages'}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default AutoMessageButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}