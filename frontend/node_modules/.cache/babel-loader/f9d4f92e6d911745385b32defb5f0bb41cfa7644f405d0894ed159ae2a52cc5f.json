{"ast":null,"code":"var _jsxFileName = \"G:\\\\repositories\\\\chat-app-starter\\\\frontend\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { getMessages, sendMessage } from '../api/messages';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatWindow({\n  chatId\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  useEffect(() => {\n    if (chatId) {\n      getMessages(chatId).then(setMessages);\n    }\n  }, [chatId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const trimmed = text.trim();\n    if (!trimmed) return;\n    try {\n      await sendMessage(chatId, trimmed);\n      toast.success('Message sent!');\n      setText('');\n\n      // Оновлення повідомлень\n      getMessages(chatId).then(setMessages);\n\n      // Через 3.5 сек — оновлення з відповіддю бота\n      setTimeout(() => {\n        getMessages(chatId).then(setMessages);\n      }, 3500);\n    } catch (err) {\n      toast.error('Failed to send message');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Type your message...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"LNrueI2DZYRpJNDsr67q34puWKw=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["useEffect","useState","getMessages","sendMessage","toast","ToastContainer","jsxDEV","_jsxDEV","ChatWindow","chatId","_s","messages","setMessages","text","setText","then","handleSubmit","e","preventDefault","trimmed","trim","success","setTimeout","err","error","console","children","map","msg","i","sender","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","type","_c","$RefreshReg$"],"sources":["G:/repositories/chat-app-starter/frontend/src/components/ChatWindow.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getMessages, sendMessage } from '../api/messages';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction ChatWindow({ chatId }) {\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n\n  useEffect(() => {\n    if (chatId) {\n      getMessages(chatId).then(setMessages);\n    }\n  }, [chatId]);\n\nconst handleSubmit = async (e) => {\n  e.preventDefault();\n  const trimmed = text.trim();\n  if (!trimmed) return;\n\n  try {\n    await sendMessage(chatId, trimmed);\n    toast.success('Message sent!');\n    setText('');\n\n    // Оновлення повідомлень\n    getMessages(chatId).then(setMessages);\n\n    // Через 3.5 сек — оновлення з відповіддю бота\n    setTimeout(() => {\n      getMessages(chatId).then(setMessages);\n    }, 3500);\n  } catch (err) {\n    toast.error('Failed to send message');\n    console.error(err);\n  }\n};\n\n\n\n  return (\n    <div>\n      <ul>\n        {messages.map((msg, i) => (\n          <li key={i}>\n            <strong>{msg.sender}:</strong> {msg.text}\n          </li>\n        ))}\n      </ul>\n      <form onSubmit={handleSubmit}>\n        <input\n          value={text}\n          onChange={e => setText(e.target.value)}\n          placeholder=\"Type your message...\"\n          required\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n\t  <ToastContainer />\n    </div>\n  );\n}\n\nexport default ChatWindow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}